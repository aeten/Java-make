#!/bin/sh

set -e

__api() {
	sed -n 's/^\([[:alpha:]][[:alnum:]_-]*\)()\s*{/\1/p' "${0}" 2>/dev/null
}

__is_api() {
	__api|grep "^${1}$" 2>&1 > /dev/null
}

__help() {
	echo "${@}" >&2
	exit 0
}

__usage() {
	echo "Usage:
$(echo "${@}"|sed 's/^/\t/')" >&2
	exit 1
}

__invalid_option() {
	echo Invalid option ${1} >&2
	__usage "$2"
}

add_prefix() {
	local prefix="${1}"; shift
	{
		while [ ${#} -ne 0 ]; do
			echo "${1}"|sed "s@^@${prefix}@"
			shift
		done
	} | paste -sd' '
}

add_suffix() {
	local suffix="${1}"; shift
	{
		while [ ${#} -ne 0 ]; do
			echo "${1}"|sed "s@\$@${suffix}@"
			shift
		done
	} | paste -sd' '
}

replace_prefix() {
	local old_prefix=${1}; shift
	local new_prefix=${1}; shift
	while [ ${#} -ne 0 ]; do
		echo "${1}"|sed "s,^${old_prefix},${new_prefix},"
		shift
	done
}

replace_suffix() {
	local old_suffix=${1}; shift
	local new_suffix=${1}; shift
	while [ ${#} -ne 0 ]; do
		echo "${1}"|sed "s,${old_suffix}$,${new_suffix},"
		shift
	done
}

target() {
	local target=
	local depends=
	local cmd=
	local builder=ninja
	local usage="${0} [-d|--depends <depedency>] [-b|--builder [ninja|make]] <targets-list>"
	while [ ${#} -ne 0 ]; do
		case "${1}" in
			-c|--command) cmd="${cmd} ${2}"; shift;;
			-d|--depends) depends="${depends} ${2}"; shift;;
			-b|--builder) builder="${2}"
				case "${builder}" in
					ninja|make);;
					*) __invalid_option ${1} "${usage}";;
				esac
 				shift;;
			-h|--help)    __help "${usage}"; shift ;;
			--)           shift; break;;
			-*)           __invalid_option ${1} "${usage}";;
			*)            break;;
		esac
		shift
	done
	depends=$(echo ${depends}|sed 's/\(^\s\+\)|\(\s\+$\)//')
	cmd=$(echo ${cmd}|sed 's/\(^\s\+\)|\(\s\+$\)//')
	{
		for target in "${@}"; do
			case "${builder}" in
				ninja)
					echo "build ${target}: ${cmd} ${depends}"
					printf "\tfirst = $(echo ${depends}|sed 's/ .*//')\n";;
				make)
					printf '%s: %s\\n\\t@mkdir --parent \\$(dir \\$@)\\n\\t\\$(call %s,%s,\\$^,\\$@)\n' ${target} "${depends}" ${cmd} ${target}
			esac
		done
	} | sed -e 's/$/\\/' -e '$s/\\$//'
}

generate() {
	local usage="${0} [-t|--template <template.ninja>]
${0} [$(__api|sed s/_/-/g|paste -sd\|)] --help"
	local template=template.ninja
	local builder
	local extension
	local dict
	local tab_subst=
	while [ ${#} -ne 0 ]; do
		case "${1}" in
			-t|--template) template=${2}; shift ;;
			-h|--help)    __help "${usage}"; shift ;;
			*)            __usage "${usage}";;
		esac
		shift
	done
	for extension in ninja mk make; do
		[ $(basename ${template} .${extension}) = $(basename ${template}) ] || { builder=${extension}; break; }
	done
	case "${builder}" in
		ninja) tab_subst='s/^\t/    /;';;
		make|mk);;
		*) __usage "Invalid builder ${builder}\n${usage}";;
	esac
	eval sed $(cat -|\
		sed ':a
			N
			$!ba
			s/\\\n/\\x00/g ' |\
		sed 's,^\([[:alpha:]][[:alnum:]_-]*\)\s*=\s*\(.*\), -e "s%@@\1@@%\2%g",' |\
		sed ':a
			N
			$!ba
			s/\n//g') ${template} |\
		sed "${tab_subst}"'s/\x00/\n/g'
}

if __is_api "$(echo ${1}|tr - _)"; then
	cmd=$(echo ${1}|tr - _)
	shift
	${cmd} "${@}"
else
	generate "${@}"
fi
